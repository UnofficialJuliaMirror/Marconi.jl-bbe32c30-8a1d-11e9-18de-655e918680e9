var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"(Image: Logo)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"\"Walks like Python, Runs like C\" for open source RF/Microwave engineering","category":"page"},{"location":"#Main-Features-1","page":"Home","title":"Main Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Marconi.jl is a library for analysis and plotting of linear RF/Microwave networks. It aims to give similar functionality as the wonderful scikit-rf library in pure Julia. While focusing on linear network analysis now, we hope to implement some non-linear analysis as well as instrument control in the future.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n    \"man/RFAnalysis.md\",\n    \"man/Plot.md\",\n    \"man/FileIO.md\",\n    \"man/NetworkAnalysis.md\",\n    \"man/Calibration.md\"\n]\nDepth = 1","category":"page"},{"location":"#Library-Outline-1","page":"Home","title":"Library Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\"lib/Public.md\"]","category":"page"},{"location":"#Coming-Soon-1","page":"Home","title":"Coming Soon","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Depending on the progress of some other libraries, Marconi.jl would like to include in the near future","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Instrument control\nNoise analysis\nFilter builders\nSimple network construction from ideal components\nOptimization of said networks\nAdvanced calibration routines\nNon-linear analysis (X-Parameters, Load Pull, etc.)\nMore interactivity with plots","category":"page"},{"location":"#Using-Marconi.jl-1","page":"Home","title":"Using Marconi.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"To use Marconi.jl simply use the Pkg REPL","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] add https://github.com/kiranshila/Marconi.jl","category":"page"},{"location":"#","page":"Home","title":"Home","text":"or from Pkg itself","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using(Pkg)\nPkg.add(\"https://github.com/kiranshila/Marconi.jl\")","category":"page"},{"location":"#In-Publications-1","page":"Home","title":"In Publications","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"If you use Marconi.jl in your work please cite us with something along the lines of","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Made possible with Marconi.jl, a Julia Library for DC to Daylight","category":"page"},{"location":"man/RFAnalysis/#RF-Analysis-1","page":"RF Analysis","title":"RF Analysis","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Pages = [\"RFAnalysis.md\"]\nDepth = 3","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"cd(\"../../..\") # hide\ncp(\"examples/CE3520K3.s2p\",\"docs/build/man/CE3520K3.s2p\", force = true) # hide\ncp(\"examples/BPF.s2p\",\"docs/build/man/BPF.s2p\", force = true) # hide","category":"page"},{"location":"man/RFAnalysis/#The-Network-Object-1","page":"RF Analysis","title":"The Network Object","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Marconi is structured around a base AbstractNetwork object. This object can be constructed with data, equations, and the combination of other networks.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"All networks provide attributes ports and Z0 for characteristic impedance.","category":"page"},{"location":"man/RFAnalysis/#DataNetwork-1","page":"RF Analysis","title":"DataNetwork","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To build a network from a Touchstone file see File IO, otherwise we can simply use the constructor for DataNetwork.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Besides ports and Z0, a DataNetwork must also have frequency, a vector of frequencies for which the network is characterized, and s_params, for the S-Parameters themselves.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"As of this release, the frequency/s_params lists must be ordered. If they are not evenly-spaced, all interpolation operations will be Grid interpolations instead of splines.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"using Marconi # hide\n# DataNetwork(ports,Z0,frequency,s_params)\nmyNetwork = DataNetwork(1,50,[100e6, 200e6],[0.3+0.5im, 0.4+0.6im])","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"For more than 1 port, the S-Parameters have to be an n-square matrix for n ports.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"using Marconi # hide\nmyNetwork = DataNetwork(2,50,[100e6, 200e6],[[0.3+0.5im 0.1+0.2im; 0.4+0.6im 0.3+0.5im], [0.3+0.5im 0.1+0.2im; 0.4+0.6im 0.3+0.5im]])","category":"page"},{"location":"man/RFAnalysis/#EquationNetwork-1","page":"RF Analysis","title":"EquationNetwork","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To build a network from an equation, we start with an equation that defines some S-Parameters.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Take a series R-L network for example. The S-Parameters of an RL network would look like:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"using Marconi # hide\nfunction inductorAndResistor(;freq,Z0)\n    L = 1e-9\n    R = 30\n    z = R + im*2*pi*freq*L\n    return (z-Z0)/(z+Z0)\nend","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To use an equation-driven network in Marconi, the function must accept the kwags freq and Z0.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To build the EquationNetwork:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"RL = EquationNetwork(1,50,inductorAndResistor)","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Once again, for n-port networks, the function must provide an n-square matrix","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"function idealTransmissionLine(;freq,Z0)\n    l = 1e-2 # 2cm\n    λ = (3e8/freq)\n    β = (2*pi)/λ\n    return [0 exp(-β*l);exp(-β*l) 0]\nend\n\ntline = EquationNetwork(2,50,idealTransmissionLine)","category":"page"},{"location":"man/RFAnalysis/#Stability-Analysis-1","page":"RF Analysis","title":"Stability Analysis","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"One of the most important aspects in active microwave design is that of stability.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"When designing an amplifier, we do not want oscillations on either of the ports. An oscillation would imply that Gamma_In  1 or Gamma_Out  1.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"As both of these gammas depend on the input and output matching networks, the stability of an amplifier depends on Gamma_S and Gamma_L.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"There are two different kinds of stability:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Unconditional Stability - Gamma_In  1 and Gamma_Out  1 for all source and load impedances\nConditional Stability - Gamma_In  1 and Gamma_Out  1 for certain impedances.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To test for unconditional stability, we use the Rollet Stability Criterion","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"K = frac1-S_11^2-S_22^2+Delta^22S_12S_21  1","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"along with the auxiliary condition that","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Delta = S_11S_22-S_12S_21  1","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"For a device to be unconditionally stable, both of these conditions must be satisfied.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To test these conditions (or plot them), use the following functions:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"using Marconi\nusing PGFPlotsX","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Example 12.2 from Microwave Engineering my David M. Pozar","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"gan_hemt = [0.869*exp(deg2rad(-159)im) 4.250*exp(deg2rad(61)im);0.031*exp(deg2rad(-9)im) 0.507*exp(deg2rad(-117)im)]\n\nnetwork = DataNetwork(2,50,[1.9e9],[gan_hemt])","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"We now compute |Δ| with","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"testMagDelta(network)[1] # Only 1 point in this data","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"and K with","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"testK(network)[1]","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"So, now we can conclude that this device is NOT unconditionally stable at 1.9 GHz as Delta  1 but K1.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"We can also plot the stability factors as a function of frequency to find stable regions.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Take the data from this CE3520K3 low noise JFET:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"jfet = readTouchstone(\"CE3520K3.s2p\")\n\n# Plot our criteria\nax = plotRectangular(jfet,testK,label=\"K\")\nplotRectangular!(ax,jfet,testMagDelta,label=raw\"$|\\Delta|$\")\n\n# Add a horizontal line to show stability regions\npush!(ax,@pgf(HLine(@pgf({\"dashed\"}),1)))\n\n# Adjust legend location\nax[\"legend pos\"] = \"outer north east\"\n\n# And a title, why not\nax[\"title\"] = \"Stability Tests\"\n\nax # hide","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"From this plot, we can conclude that under 50Ω matching on both ports, this device is unconditionally stable from 14-18 GHz and above 25 GHz as those two regions satisfy the criterion.","category":"page"},{"location":"man/RFAnalysis/#Stability-Circles-1","page":"RF Analysis","title":"Stability Circles","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To observe the behavior of potentially unstable devices, we can plot the region that would push the device into oscillation. The circle that bounds these impedances are Stability Circles.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To plot these stability circles we can start with a network at one frequency:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"LNA = DataNetwork(2,50,[800e6],[[∠(0.65,-95) ∠(0.035,40); ∠(5,115) ∠(0.8,-35)]])","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Now we can plot the the source and load stability circles on a smith chart.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"sc = SmithChart()\nplotSStabCircle!(sc,LNA,800e6,label=\"Source Stability\")\nplotLStabCircle!(sc,LNA,800e6,label=\"Load Stability\")","category":"page"},{"location":"man/RFAnalysis/#VSWR-Circles-1","page":"RF Analysis","title":"VSWR Circles","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Some times it is helpful to draw VSWR circles to know the bandwidth of a network. This is done with","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"using Marconi\nusing PGFPlotsX","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"# 10 dB RL == 1.92 VSWR\ncircleStyle = @pgf {\"thick\", color = \"black\"}\nbpf = readTouchstone(\"BPF.s2p\")\nsc = plotSmithData(bpf,(1,1),label=\"S(1,1)\")\nplotVSWR!(sc,1.92,opts = circleStyle,label=\"VSWR = 1.92\")","category":"page"},{"location":"man/RFAnalysis/#Gain-Equations-1","page":"RF Analysis","title":"Gain Equations","text":"","category":"section"},{"location":"man/RFAnalysis/#Operating-Power-Gain-1","page":"RF Analysis","title":"Operating Power Gain","text":"","category":"section"},{"location":"man/RFAnalysis/#Transducer-Gain-1","page":"RF Analysis","title":"Transducer Gain","text":"","category":"section"},{"location":"man/RFAnalysis/#Unilateral-Transducer-Gain-1","page":"RF Analysis","title":"Unilateral Transducer Gain","text":"","category":"section"},{"location":"man/RFAnalysis/#Available-Gain-1","page":"RF Analysis","title":"Available Gain","text":"","category":"section"},{"location":"man/RFAnalysis/#Gain-Circles-1","page":"RF Analysis","title":"Gain Circles","text":"","category":"section"},{"location":"man/RFAnalysis/#Transmission-Line-Calculations-1","page":"RF Analysis","title":"Transmission Line Calculations","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Marconi provides some basic calculations for transmission lines:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"using Marconi","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"# Input impedance of lossless t-line terminated in Zr\nΘ = 35\nZr = 100+im*50\nZin = inputZ(Zr,Θ)","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"And to show the behavior we expect from a λ/4 line:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Θ = 89.99\nZr = 1e99+0im\nZin = inputZ(Zr,Θ)","category":"page"},{"location":"man/FileIO/#File-IO-1","page":"File IO","title":"File IO","text":"","category":"section"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"Pages = [\"FileIO.md\"]\nDepth = 3","category":"page"},{"location":"man/FileIO/#Reading-Touchstone-Files-1","page":"File IO","title":"Reading Touchstone Files","text":"","category":"section"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"One of the easiest ways to get measured data into Marconi is with Touchstone files.","category":"page"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"These files follow the standard enumerated here - a typical output format from simulation software and network analyzers.","category":"page"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"note: Note\nMarconi currently doesn't support port impedance mapping (different port impedances) or noise parameters.","category":"page"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"Reading these files into a Network object is straightforward","category":"page"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"cd(\"../../..\")\ncp(\"examples/BPF.s2p\",\"docs/build/man/BPF.s2p\",force = true)","category":"page"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"using Marconi # hide\nreadTouchstone(\"BPF.s2p\")","category":"page"},{"location":"man/Plot/#Plotting-1","page":"Plotting","title":"Plotting","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"note: Note\nThe plotting library depends on a working installation of PGFPlotsX.jl","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Pages = [\"Plot.md\"]\nDepth = 3","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"The core of the plotting functionality in Marconi comes from the PGFPlotsX backend. This library allows for publication-quality graphics with complete configurability of the layout itself.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"The functions within the plotting library merely contextualize the Network object or other parameters into a PGFPlotsX plot object.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"It is highly recommended to thoroughly read the docs for PGFPlotsX to make the post of its plotting capability.","category":"page"},{"location":"man/Plot/#Smith-Charts-1","page":"Plotting","title":"Smith Charts","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"To start plotting on Smith Charts, it generally is a good idea to start with an empty SmithChart axis object from PGFPlotsX.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"cd(\"../../..\") # hide\ncp(\"examples/BPF.s2p\",\"docs/build/man/BPF.s2p\", force = true) # hide\ncp(\"examples/Amp.s2p\",\"docs/build/man/Amp.s2p\", force = true) # hide","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"using Marconi\nusing PGFPlotsX\nsc = SmithChart()","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"This object is an Axis which can accept Plots objects as well as PGFPlotsX.Options.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"To push plot objects into this circle, one can use either plotSmithData! or plotSmithCircle!.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"These functions create a Plot object out of Network data and adds them to an existing Axis object.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Lets add some data to this axis","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"bpf = readTouchstone(\"BPF.s2p\")\nprint(bpf) # hide","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"This is a network object of a BFCG-162W+ filter from MiniCircuits","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"We can now simply call plotSmithData! to write this data to the chart. The third argument is a tuple of the parameter we want to plot. For this data, we want S(1,1), so we pass in the (1,1) tuple.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"plotSmithData!(sc,bpf,(1,1))","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"This is the same behavior as if we constructed the axis and plotted simultaneously with plotSmithData.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"plotSmithData(bpf,(1,1))","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"To add labels to any plot, we just call any of the plotting functions with the label kwarg.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"plotSmithData(bpf,(1,1),label=\"S(1,1)\")","category":"page"},{"location":"man/Plot/#Plotting-with-Equation-Driven-Networks-1","page":"Plotting","title":"Plotting with Equation-Driven Networks","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"To plot with an EquationNetwork, we must also provide the frequencies to plot. This is done with the additional kwarg freqs","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"function inductorAndResistor(;freq,Z0)\n    L = 1e-9\n    R = 30\n    z = R + im*2*pi*freq*L\n    return (z-Z0)/(z+Z0)\nend\nRL = EquationNetwork(1,50,inductorAndResistor)\n\nplotSmithData(RL,(1,1),freqs=range(100e6,stop=10e9,length=201))","category":"page"},{"location":"man/Plot/#Smith-Chart-Circles-1","page":"Plotting","title":"Smith Chart Circles","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"As anyone who has read Microwave Transistor Amplifiers would know, drawing circles on a Smith Chart could be very useful. In Marconi, use cases such as stability circles and gain circles are explored in RF Analysis.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"The plotSmithCircle! function behaves similarly to plotSmithData as it accepts a SmithChart object, x and y center coordinates, and a radius.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"These coordinates are referenced to the unit circle Gamma plane, so -1 leq x leq 1 and -1 leq y leq 1.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"This plot can also accept the opts kwarg.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"sc = SmithChart()\nstyle = @pgf {\"color\" = \"cyan\", \"very thick\"}\nplotSmithCircle!(sc,0.3,0.75,0.3,opts = style)","category":"page"},{"location":"man/Plot/#Plot-Options-1","page":"Plotting","title":"Plot Options","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"As these plots and axes are fundamentally PGFPlotsX objects, we can pass in options using the opts kwarg. Additionally, the plotSmithData function can take a axopts kwarg to pass in options specific to the axis such as title and size.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"style = @pgf {color = \"red\", \"thick\"}\nsc = plotSmithData(bpf,(1,1),opts = style)","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"The return of plotSmithData is a SmithChart axis object, so we can set variables after the fact as well just like every other PGFPlotsX object.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"sc[\"title\"] = \"My Smith Chart\"","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Finally, the width and tick mark density is all related as per the PGFPlots manual.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Check it out here","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"When creating a SmithChart axis by itself, there is no kwarg for options.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"using PGFPlotsX # hide\naxis_style = @pgf {width = \"15cm\",title = \"Medium Smith Chart\"}\nsc = SmithChart(axis_style)","category":"page"},{"location":"man/Plot/#Rectangular-Plots-1","page":"Plotting","title":"Rectangular Plots","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"To plot on a rectangular axis, we call the plotRectangular and plotRectangular! functions.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"These operate similar in functionality to the smith chart plotting utilities as plotRectangular accepts a network object and the parameter to plot. Additionally, plotRectangular requires a function to apply to make 1-D data. This could be dB as supplied by this library, real, imag, or some other function. Finally, one could plot any network parameter, be it S, Z, Y, H, G, or ABCD.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Same as plotSmithData, plotRectangular! accepts an opts kwarg as well as an axopts kwag for plotRectangular as it is creating an axis object.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"using Marconi\nusing PGFPlotsX","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"amp = readTouchstone(\"Amp.s2p\")\nax = plotRectangular(amp,(1,1),dB,label=\"S(1,1)\")\nplotRectangular!(ax,amp,(2,1),dB,label=\"S(2,1)\")\nax[\"ylabel\"] = \"dB\"\nax # hide","category":"page"},{"location":"man/Plot/#Polar-Plots-1","page":"Plotting","title":"Polar Plots","text":"","category":"section"},{"location":"man/Plot/#Groups-of-Plots-1","page":"Plotting","title":"Groups of Plots","text":"","category":"section"},{"location":"man/NetworkAnalysis/#Network-Analysis-1","page":"Network Analysis","title":"Network Analysis","text":"","category":"section"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"Pages = [\"NetworkAnalysis.md\"]\nDepth = 3","category":"page"},{"location":"man/NetworkAnalysis/#Converting-Between-Networks-Representations-1","page":"Network Analysis","title":"Converting Between Networks Representations","text":"","category":"section"},{"location":"man/NetworkAnalysis/#Interpolations-1","page":"Network Analysis","title":"Interpolations","text":"","category":"section"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"To interpolate networks, one can just call interpolate with a network object and some array or range of new frequencies. For evenly-spaced networks, interpolate will use a cubic spline interpolation, while uneven spaced networks will use a standard linear gridded interpolation.","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"cd(\"../../..\") # hide\ncp(\"examples/Amp.s2p\",\"docs/build/man/Amp.s2p\", force = true) # hide\ncp(\"examples/CE3520K3.s2p\",\"docs/build/man/CE3520K3.s2p\", force = true) # hide","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"using Marconi\nusing PGFPlotsX","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"# Uneven network\namp = readTouchstone(\"Amp.s2p\")","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"This network has 879 points from 10 MHz to 18 GHz. Let's reinterpret it to more points.","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"amp_morePoints = interpolate(amp,range(10e6,stop=18e9,length=1001))","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"As typical with interpolations, one can only interpolate between the bounds of the source data.","category":"page"},{"location":"man/NetworkAnalysis/#Cascading-Networks-1","page":"Network Analysis","title":"Cascading Networks","text":"","category":"section"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"For working with 2-Port networks, cascading multiple networks can be helpful for finding system performance, embedding, and deembedding.","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"cascade takes n number of 2-Port networks and returns a new DataNetwork that is the cascaded result of all the networks. This function interpolates all networks to their overlapping frequency range, converts to T-Parameters, and cascades with matrix multiplication.","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"using Marconi\nusing PGFPlotsX","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"Here are two networks individually, an amplifier and band-pass filter","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"amp = readTouchstone(\"Amp.s2p\")\nbpf = readTouchstone(\"BPF.s2p\")\nax = plotRectangular(amp,(2,1))\nplotRectangular!(ax,bpf,(2,1))","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"And cascading Port 1 -> BPF -> Amp -> Port 2","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"system = cascade(bpf,amp)\nplotRectangular!(ax,system,(2,1))","category":"page"},{"location":"man/NetworkAnalysis/#Cascading-Data-Networks-with-Equation-Driven-Networks-1","page":"Network Analysis","title":"Cascading Data Networks with Equation-Driven Networks","text":"","category":"section"},{"location":"man/Calibration/#Calibration-1","page":"Calibration","title":"Calibration","text":"","category":"section"},{"location":"man/Calibration/#","page":"Calibration","title":"Calibration","text":"Pages = [\"Calibration.md\"]\nDepth = 3","category":"page"},{"location":"man/Calibration/#Calibration-Theory-1","page":"Calibration","title":"Calibration Theory","text":"","category":"section"},{"location":"man/Calibration/#SOL-1-Port-Calibration-1","page":"Calibration","title":"SOL - 1 Port Calibration","text":"","category":"section"},{"location":"man/Calibration/#Port-Methods-1","page":"Calibration","title":"2 Port Methods","text":"","category":"section"},{"location":"man/Calibration/#SOLT-1","page":"Calibration","title":"SOLT","text":"","category":"section"},{"location":"man/Calibration/#SOLR-1","page":"Calibration","title":"SOLR","text":"","category":"section"},{"location":"man/Calibration/#LRM-1","page":"Calibration","title":"LRM","text":"","category":"section"},{"location":"man/Calibration/#LRRM-1","page":"Calibration","title":"LRRM","text":"","category":"section"},{"location":"man/Calibration/#TRL-1","page":"Calibration","title":"TRL","text":"","category":"section"},{"location":"man/Calibration/#Data-Driven-(Experimental)-1","page":"Calibration","title":"Data Driven (Experimental)","text":"","category":"section"},{"location":"lib/Public/#Public-Functions-for-Marconi-1","page":"Public","title":"Public Functions for Marconi","text":"","category":"section"},{"location":"lib/Public/#Index-1","page":"Public","title":"Index","text":"","category":"section"},{"location":"lib/Public/#","page":"Public","title":"Public","text":"Pages = [\"Public.md\"]","category":"page"},{"location":"lib/Public/#Public-Interface-1","page":"Public","title":"Public Interface","text":"","category":"section"},{"location":"lib/Public/#","page":"Public","title":"Public","text":"Modules = [Marconi]\nOrder   = [:type, :function]","category":"page"},{"location":"lib/Public/#Marconi.DataNetwork","page":"Public","title":"Marconi.DataNetwork","text":"The base Network type for representing n-port linear networks with characteristic impedance Z0.   By default, the network is stored as S-Parameters with the corresponding frequency list.\n\n\n\n\n\n","category":"type"},{"location":"lib/Public/#Marconi.EquationNetwork","page":"Public","title":"Marconi.EquationNetwork","text":"The base Network type for representing n-port linear networks with characteristic impedance Z0.   The S-Parameters for an EquationNetwork are defined by a function that returns a ports-square matrix   and accepts kwargs Z0 and freq.\n\n\n\n\n\n","category":"type"},{"location":"lib/Public/#Marconi.cascade-Union{Tuple{Vararg{T,N} where N}, Tuple{T}} where T<:AbstractNetwork","page":"Public","title":"Marconi.cascade","text":"cascade(net1,net2,net3,...,netN)\n\nReturns a new DataNetwork that is the cascaded result of net1,net2,net3,...netN where the nets are 2-Port DataNetwork objects. Optionally takes kwarg numpoints for how many points in the result.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.inputZ-Tuple{Any,Any}","page":"Public","title":"Marconi.inputZ","text":"inputZ(Zr,Θ,Z0)\n\nCalculates the input impedace of a lossless transmission line of length θ in degrees terminated with Zr. Z0 is optional and defaults to 50.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.inputZ-Tuple{Any}","page":"Public","title":"Marconi.inputZ","text":"inputZ(Γ,Z0)\n\nCalculates the input impedace from complex reflection coefficient Γ. Z0 is optional and defaults to 50.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.interpolate-Union{Tuple{T}, Tuple{DataNetwork,Array{T,1}}} where T<:Real","page":"Public","title":"Marconi.interpolate","text":"interpolate(network,frequencies)\n\nReturns a new network object that contains data from network reinterpolated to fit frequencies.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotLStabCircle!-Union{Tuple{T}, Tuple{SmithChart,T,Real}} where T<:AbstractNetwork","page":"Public","title":"Marconi.plotLStabCircle!","text":"plotLStabCircle!(sc,network,freq)\n\nPlots the the load stability circle on Smith Chart sc from network at frequency freq.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotSStabCircle!-Union{Tuple{T}, Tuple{SmithChart,T,Real}} where T<:AbstractNetwork","page":"Public","title":"Marconi.plotSStabCircle!","text":"plotSStabCircle!(sc,network,freq)\n\nPlots the the source stability circle on Smith Chart sc from network at frequency freq.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotSmithCircle!-Union{Tuple{C}, Tuple{B}, Tuple{A}, Tuple{SmithChart,A,B,C}} where C<:Real where B<:Real where A<:Real","page":"Public","title":"Marconi.plotSmithCircle!","text":"plotSmithCircle!(sc, xc, yc, rad)\n\nPlots a cricle with center coordinates (xc,yc) on the Gamma plane with radius rad on an existing Smith Chart object.\n\nReturns the sc object\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotSmithData!-Union{Tuple{T}, Tuple{SmithChart,T,Tuple{Int64,Int64}}} where T<:AbstractNetwork","page":"Public","title":"Marconi.plotSmithData!","text":"plotSmithData!(sc, network,(1,1))\n\nPlots the S(1,1) parameter from network on an existing Smith Chart sc\n\nReturns the sc object\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotSmithData-Union{Tuple{T}, Tuple{T,Tuple{Int64,Int64}}} where T<:AbstractNetwork","page":"Public","title":"Marconi.plotSmithData","text":"plotSmithData(network,(1,1))\n\nPlots the S(1,1) parameter from network on a Smith Chart.\n\nReturns a PGFPlotsX.SmithChart object.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotVSWR!-Tuple{SmithChart,Real}","page":"Public","title":"Marconi.plotVSWR!","text":"plotVSWR!(sc,VSWR)\n\nPlots the circle that represents a VSWR of VSWR onto an existing Smith Chart.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.readTouchstone-Tuple{String}","page":"Public","title":"Marconi.readTouchstone","text":"readTouchstone(\"myFile.sNp\")\n\nReads the contents of myFile.sNp into a Network object. This will convert all file types to S-Parameters, Real/Imaginary\n\nCurrently does not support reference lines (Different port impedances) or noise parameters\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.s2t-Union{Tuple{Array{T,2}}, Tuple{T}} where T<:Number","page":"Public","title":"Marconi.s2t","text":"    s2t(s)\n\nConverts S-Parameters s to T-Parameters.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.s2z-Union{Tuple{Array{A,2}}, Tuple{B}, Tuple{A}} where B<:Number where A<:Number","page":"Public","title":"Marconi.s2z","text":"    s2z(s)\n\nConverts S-Parameters s to Z-Parameters. Optionally include reference impedance with kwarg Z0 with s2z(s,Z0=50).\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.t2s-Union{Tuple{Array{T,2}}, Tuple{T}} where T<:Number","page":"Public","title":"Marconi.t2s","text":"    t2s(t)\n\nConverts T-Parameters t to S-Parameters.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.testDelta-Union{Tuple{T}, Tuple{T}} where T<:AbstractNetwork","page":"Public","title":"Marconi.testDelta","text":"testDelta(network)\n\nReturns a vector of Δ, the determinant of the scattering matrix. Optionally, returns Δ for S-Parameters at position pos.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.testK-Union{Tuple{T}, Tuple{T}} where T<:AbstractNetwork","page":"Public","title":"Marconi.testK","text":"testK(network)\n\nReturns a vector of the magnitude of K, the Rollet stability factor.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.testMagDelta-Union{Tuple{T}, Tuple{T}} where T<:AbstractNetwork","page":"Public","title":"Marconi.testMagDelta","text":"testMagDelta(network)\n\nReturns a vector of Δ, the determinant of the scattering matrix. Optionally, returns |Δ| for S-Parameters at position pos.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.y2s-Union{Tuple{Array{A,2}}, Tuple{B}, Tuple{A}} where B<:Number where A<:Number","page":"Public","title":"Marconi.y2s","text":"    y2s(y)\n\nConverts Y-Parameters y to S-Parameters. Optionally include reference impedance with kwarg Z0 with y2s(y,Z0=50).\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.z2s-Union{Tuple{Array{A,2}}, Tuple{B}, Tuple{A}} where B<:Number where A<:Number","page":"Public","title":"Marconi.z2s","text":"    z2s(z)\n\nConverts Z-Parameters z to S-Parameters. Optionally include reference impedance with kwarg Z0 with z2s(z,Z0=50).\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.Γ-Tuple{Any}","page":"Public","title":"Marconi.Γ","text":"Γ(Z,Z0)\n\nCalculates the complex reflection coefficient Γ from impedance Z. Z0 is optional and defaults to 50.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.∠-Tuple{Any,Any}","page":"Public","title":"Marconi.∠","text":"∠(mag,angle)\n\nA nice compact way of representing phasors. Angle is in degrees.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.processTouchstoneLine-Union{Tuple{T}, Tuple{String,Real,paramType,paramFormat,T}} where T<:Number","page":"Public","title":"Marconi.processTouchstoneLine","text":"Internal function to process touchstone lines\n\n\n\n\n\n","category":"method"}]
}

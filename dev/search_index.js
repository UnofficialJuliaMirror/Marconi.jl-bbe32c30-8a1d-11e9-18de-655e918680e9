var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"(Image: Logo)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Walks like Python, Runs like C\" for open source RF/Microwave engineering","category":"page"},{"location":"#Main-Features-1","page":"Home","title":"Main Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Marconi.jl aims to give similar functionality as the wonderful scikit-rf library in pure Julia. Most of this package will focus on linear network parameters with more advanced non-linear network analysis coming in the future.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n    \"man/FileIO.md\",\n    \"man/NetworkAnalysis.md\",\n    \"man/RFAnalysis.md\",\n    \"man/Calibration.md\",\n    \"man/Plot.md\"\n]\nDepth = 1","category":"page"},{"location":"#Library-Outline-1","page":"Home","title":"Library Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\"lib/Public.md\"]","category":"page"},{"location":"#Coming-Soon-1","page":"Home","title":"Coming Soon","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Depending on the progress of some other libraries, Marconi.jl would like to include in the near future","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Instrument control\nNoise analysis\nFilter builders\nSimple network construction from ideal components\nOptimization of said networks\nAdvanced calibration routines\nNon-linear analysis (X-Parameters, Load Pull, etc.)\nMore interactivity with plots","category":"page"},{"location":"#Using-Marconi.jl-1","page":"Home","title":"Using Marconi.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"To use Marconi.jl simply use the Pkg REPL","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] add https://github.com/kiranshila/Marconi.jl","category":"page"},{"location":"#","page":"Home","title":"Home","text":"or from Pkg itself","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using(Pkg)\nPkg.add(\"https://github.com/kiranshila/Marconi.jl\")","category":"page"},{"location":"#In-Publications-1","page":"Home","title":"In Publications","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"If you use Marconi.jl in your work please cite us with something along the lines of","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Made possible with Marconi.jl, a Julia Library for DC to Daylight","category":"page"},{"location":"man/FileIO/#File-IO-1","page":"File IO","title":"File IO","text":"","category":"section"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"Marconi.jl supports reading and writing standard Touchstone files with most of Touchstone spec implemented including n-ports, non standard port impedances, and S, Y, Z, H, and G parameter reading.","category":"page"},{"location":"man/FileIO/#","page":"File IO","title":"File IO","text":"Marconi.jl currently does not support noise parameters nor per-port impedance.","category":"page"},{"location":"man/NetworkAnalysis/#Network-Analysis-1","page":"Network Analysis","title":"Network Analysis","text":"","category":"section"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"Marconi.jl supports conversion between S, Y, Z, H, G, ABCD and T parameters.","category":"page"},{"location":"man/NetworkAnalysis/#","page":"Network Analysis","title":"Network Analysis","text":"There are functions to cascade networks and deembed networks as well.","category":"page"},{"location":"man/RFAnalysis/#RF-Analysis-1","page":"RF Analysis","title":"RF Analysis","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Marconi.jl can calculate simple pasivisity and reciprocity calculations as well as first principles including but not limited to:","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Rowlett Stability Analysis\nMaximum Gain\nMaximum Stable Gain\nQ-Factor","category":"page"},{"location":"man/RFAnalysis/#Usage-1","page":"RF Analysis","title":"Usage","text":"","category":"section"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"Marconi is structured around a base Network object. This object can be constructed with data, equations, and the combination of other networks.","category":"page"},{"location":"man/RFAnalysis/#","page":"RF Analysis","title":"RF Analysis","text":"To build a network from a Touchstone file:","category":"page"},{"location":"man/Calibration/#Calibration-1","page":"Calibration","title":"Calibration","text":"","category":"section"},{"location":"man/Calibration/#","page":"Calibration","title":"Calibration","text":"Marconi.jl supports calibration using the following methods","category":"page"},{"location":"man/Calibration/#","page":"Calibration","title":"Calibration","text":"SOL(R/T)\nTRL","category":"page"},{"location":"man/Plot/#Plotting-1","page":"Plotting","title":"Plotting","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"note: Note\nThe plotting library depends on a working installation of PGFPlotsX.jl","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Currently, one can plot networks on","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Smith Charts\nRectangular Plots\nPolar Plots\nCircles on Smith Charts\nGain Circles\nQ Circles\nVSWR Circles\nConstant-R Circles\nConstant-G Circles\nConstant-X Circles\nConstant-Y Circles","category":"page"},{"location":"man/Plot/#Smith-Charts-1","page":"Plotting","title":"Smith Charts","text":"","category":"section"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"To start plotting on Smith Charts, it generally is a good idea to start with an empty SmithChart axis object.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"sc = SmithChart()","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"This object is a container for Network data as well as circles.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"To push objects into this circle, one can use either plotSmith! or plotSmithCircle!.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"In addition, one can generate a SmithChart from data or a circle with plotSmith and plotSmithCircle.","category":"page"},{"location":"man/Plot/#","page":"Plotting","title":"Plotting","text":"Lets add some data to this plot","category":"page"},{"location":"lib/Public/#Public-Functions-for-Marconi-1","page":"Public","title":"Public Functions for Marconi","text":"","category":"section"},{"location":"lib/Public/#Index-1","page":"Public","title":"Index","text":"","category":"section"},{"location":"lib/Public/#","page":"Public","title":"Public","text":"Pages = [\"Public.md\"]","category":"page"},{"location":"lib/Public/#Public-Interface-1","page":"Public","title":"Public Interface","text":"","category":"section"},{"location":"lib/Public/#","page":"Public","title":"Public","text":"Modules = [Marconi]\nOrder   = [:type, :function]","category":"page"},{"location":"lib/Public/#Marconi.plotSmith!-Tuple{SmithChart,Marconi.Network,Tuple{Int64,Int64}}","page":"Public","title":"Marconi.plotSmith!","text":"plotSmith!(sc, network,(1,1))\n\nPlots the S(1,1) parameter from network on an existing Smith Chart sc\n\nReturns the sc object\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotSmith-Tuple{Marconi.Network,Tuple{Int64,Int64}}","page":"Public","title":"Marconi.plotSmith","text":"plotSmith(network,(1,1))\n\nPlots the S(1,1) parameter from network on a Smith Chart.\n\nReturns a PGFPlotsX.SmithChart object.\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.plotSmithCircle!-Union{Tuple{C}, Tuple{B}, Tuple{A}, Tuple{SmithChart,A,B,C}} where C<:Real where B<:Real where A<:Real","page":"Public","title":"Marconi.plotSmithCircle!","text":"plotSmithCircle!(sc, xc, yc, rad)\n\nPlots a cricle with center coordinates (xc,yc) on the Gamma plane with radius rad on an existing Smith Chart object.\n\nReturns the sc object\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.readTouchstone-Tuple{String}","page":"Public","title":"Marconi.readTouchstone","text":"readTouchstone(\"myFile.sNp\")\n\nReads the contents of myFile.sNp into a Network object. This will convert all file types to S-Parameters, Real/Imaginary\n\nCurrently does not support reference lines (Different port impedances) or noise parameters\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.s2z-Union{Tuple{Array{A,2}}, Tuple{B}, Tuple{A}} where B<:Number where A<:Number","page":"Public","title":"Marconi.s2z","text":"    s2z(s)\n\nConverts S-Parameters s to Z-Parameters. Optionally include reference impedance with kwarg Z0 with s2z(s,Z0=50).\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.y2s-Union{Tuple{Array{A,2}}, Tuple{B}, Tuple{A}} where B<:Number where A<:Number","page":"Public","title":"Marconi.y2s","text":"    y2s(y)\n\nConverts Y-Parameters y to S-Parameters. Optionally include reference impedance with kwarg Z0 with y2s(y,Z0=50).\n\nExample\n\ny11 =  0.0488133074245012 - 0.390764155450191im\ny12 = -0.0488588365420561 + 0.390719345880018im\ny21 = -0.0487261119282660 + 0.390851884427087im\ny22 =  0.0487710062903760 - 0.390800401433241im\n\ny_params = [y11 y12; y21 y22]\n\njulia> y2s(y_params)\n2Ã—2 Array{Complex{Float64},2}:\n 0.00381839+0.0247966im    0.996111-0.0249991im\n   0.996392-0.0253812im  0.00374364+0.0249161im\n\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.z2s-Union{Tuple{Array{A,2}}, Tuple{B}, Tuple{A}} where B<:Number where A<:Number","page":"Public","title":"Marconi.z2s","text":"    z2s(z)\n\nConverts Z-Parameters z to S-Parameters. Optionally include reference impedance with kwarg Z0 with z2s(z,Z0=50).\n\nExample\n\nz11 = -14567.2412789287 - 148373.315116592im\nz12 = -14588.1106171651 - 148388.583516562im\nz21 = -14528.0522132692 - 148350.705757767im\nz22 = -14548.5996561832 - 148363.457002006im\n\nz_params = [z11 z12; z21 z22]\n\njulia> z2s(z_params)\n2Ã—2 Array{Complex{Float64},2}:\n 0.00381839+0.0247966im    0.996392-0.0253812im\n   0.996111-0.0249991im  0.00374364+0.0249161im\n\n\n\n\n\n\n","category":"method"},{"location":"lib/Public/#Marconi.Network","page":"Public","title":"Marconi.Network","text":"The base Network type for representing n-port linear networks with characteristic impedance Z0.   By default, the network is stored as S-Parameters with the corresponding frequency list.\n\n\n\n\n\n","category":"type"},{"location":"lib/Public/#Marconi.processTouchstoneLine-Union{Tuple{T}, Tuple{String,Real,paramType,paramFormat,T}} where T<:Number","page":"Public","title":"Marconi.processTouchstoneLine","text":"Internal function to process touchstone lines\n\n\n\n\n\n","category":"method"}]
}
